<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app xmlns="http://java.sun.com/xml/ns/javaee"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="
         http://java.sun.com/xml/ns/javaee
		 http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
         version="3.0" > <!-- metadata-complete="true" -->

    <display-name>Archetype Created Web Application</display-name>

    <welcome-file-list>
        <welcome-file>/index.jsp</welcome-file>
    </welcome-file-list>


    <!-- 针对于每次浏览器的POST请求进行编码过滤，GET可在Tomcat内设置 -->
    <filter>
        <filter-name>encodingFilter</filter-name>
        <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
        <init-param>
            <param-name>encoding</param-name>
            <param-value>UTF-8</param-value>
        </init-param>
    </filter>
    <filter-mapping>
        <filter-name>encodingFilter</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>


    <!-- 登录过滤，拦截所有jsp -->
    <!--<filter>
        <filter-name>loginFilter</filter-name>
        <filter-class>com.stone.core.filter.LoginFilter</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>loginFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
    </filter-mapping>-->


    <!-- 监听器配置（监听ServletContext是否加载，加载后初始化spring的bean文件内的对象并存入ServletContext） -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>
    <!-- spring文件的配置（与ContextLoaderListener配合，不设置此属性，监听器默认去src下找名、为applicationContext的配置文件） -->
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>classpath:spring.xml</param-value>
    </context-param>


    <!-- 可用System.getProperty("testProject")来动态获项目的运行路径(log4j2内可试${testProject}) -->
    <context-param>
        <param-name>webAppRootKey</param-name>
        <param-value>testProject</param-value>
    </context-param>


    <!-- spring MVC 的配置 -->
    <servlet>
        <servlet-name>springMVC</servlet-name>
        <!-- DispatcherServlet: 前端控制器，集中访问点，负责职责的分派(为各个controller分派任务) -->
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>
                classpath:springMVC.xml
            </param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>springMVC</servlet-name>
        <url-pattern>/*</url-pattern>
    </servlet-mapping>


    <!-- log4j2的监听器 -->
    <listener>
        <listener-class>org.apache.logging.log4j.web.Log4jServletContextListener</listener-class>
    </listener>
    <!-- log4j2文件的配置 -->
    <context-param>
        <param-name>log4jConfiguration</param-name>
        <param-value>classpath:log4j.properties</param-value>
    </context-param>
    <!-- log4j2的过滤器 -->
    <!--<filter>-->
    <!--<filter-name>log4j2ServletFilter</filter-name>-->
    <!--<filter-class>org.apache.logging.log4j.web.Log4jServletFilter</filter-class>-->
    <!--</filter>-->
    <!--<filter-mapping>-->
    <!--<filter-name>log4j2ServletFilter</filter-name>-->
    <!--<url-pattern>/*</url-pattern>-->
    <!--<dispatcher>REQUEST</dispatcher>-->
    <!--<dispatcher>FORWARD</dispatcher>-->
    <!--<dispatcher>INCLUDE</dispatcher>-->
    <!--<dispatcher>ERROR</dispatcher>-->
    <!--</filter-mapping>-->


    <!--<servlet>
        <servlet-name>DruidStatView</servlet-name>
        <servlet-class>com.alibaba.druid.support.http.StatViewServlet</servlet-class>
    </servlet>
    <servlet-mapping>
        <servlet-name>DruidStatView</servlet-name>
        <url-pattern>/druid/*</url-pattern>
    </servlet-mapping>-->


    <!-- 设置session的超时时间（单位为分钟） -->
    <session-config>
        <session-timeout>30</session-timeout>
    </session-config>
    
    
    <listener>
        <listener-class>com.stone.common.listener.ServletContextListenerTest</listener-class>
    </listener>


    <!-- 403错误页面 -->
    <error-page>
        <error-code>403</error-code>
        <location>/html/exception/403.html</location>
    </error-page>
    <!-- 404错误页面 -->
    <error-page>
        <error-code>404</error-code>
        <location>/html/exception/404.html</location>
    </error-page>
    <!-- 405错误页面 -->
    <error-page>
        <error-code>405</error-code>
        <location>/html/exception/405.html</location>
    </error-page>
    <!-- 500错误页面 -->
    <error-page>
        <error-code>500</error-code>
        <location>/html/exception/500.html</location>
    </error-page>
    <!-- 403错误页面 -->
    <error-page>
        <exception-type>java.lang.Exception</exception-type>
        <location>/html/exception/exception.html</location>
    </error-page>


</web-app>
